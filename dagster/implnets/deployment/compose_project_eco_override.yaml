version: "3.9"

# networks: production uses traefik_proxy, buth
#  this is local testing


# DO NOT START IN PYCHARM (unless you set the env variables in your runconfig
# USE:
# ./docker_localstart.sh
services:
    dagster-dagit:
            # GLEANEERIO_  the environment variables for this stack, passed into containers
            # the variables passed into the containers varies due to inconsistent standards.
            # this there are prefixed by project aka ECRR_ for customization
          # DO NOT RENAME THE FIRST PART, aka the container environment variable,
          #     unless you sure what you are doing
        environment: &env
            - DEBUG=${DEBUG:-false}
            - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
            - PORTAINER_URL=${PORTAINER_URL}
            - PORTAINER_KEY=${PORTAINER_KEY}
            - GLEANERIO_GLEANER_IMAGE=${GLEANERIO_GLEANER_IMAGE}
            - GLEANERIO_NABU_IMAGE=${GLEANERIO_NABU_IMAGE}
            - GLEANERIO_LOG_PREFIX=${GLEANERIO_LOG_PREFIX}
            - GLEANERIO_MINIO_ADDRESS=${GLEANERIO_MINIO_ADDRESS}
            - GLEANERIO_MINIO_PORT=${GLEANERIO_MINIO_PORT}
            - GLEANERIO_MINIO_USE_SSL=${GLEANERIO_MINIO_USE_SSL}
            - GLEANERIO_MINIO_BUCKET=${GLEANERIO_MINIO_BUCKET}
            - GLEANERIO_MINIO_ACCESS_KEY=${GLEANERIO_MINIO_ACCESS_KEY}
            - GLEANERIO_MINIO_SECRET_KEY=${GLEANERIO_MINIO_SECRET_KEY}
            - GLEANERIO_HEADLESS_ENDPOINT=${GLEANERIO_HEADLESS_ENDPOINT}
            - GLEANERIO_DOCKER_HEADLESS_NETWORK=${GLEANERIO_DOCKER_HEADLESS_NETWORK}
            - GLEANERIO_GRAPH_URL=${GLEANERIO_GRAPH_URL}
            - GLEANERIO_GRAPH_NAMESPACE=${GLEANERIO_GRAPH_NAMESPACE}
            - GLEANERIO_NABU_CONFIG_PATH=${GLEANERIO_NABU_CONFIG_PATH:-/configs/gleaner/nabuconfig.yaml}
            - GLEANERIO_GLEANER_CONFIG_PATH=${GLEANERIO_GLEANER_CONFIG_PATH:-/configs/gleaner/gleanerconfig.yaml}
            - GLEANERIO_DOCKER_NABU_CONFIG=${GLEANERIO_DOCKER_NABU_CONFIG:-nabu}
            - GLEANERIO_DOCKER_GLEANER_CONFIG=${GLEANERIO_DOCKER_GLEANER_CONFIG:-gleaner}
            - GLEANERIO_GRAPH_SUMMARY_ENDPOINT=${GLEANERIO_GRAPH_SUMMARY_ENDPOINT:-${GLEANERIO_GRAPH_URL}}
            - GLEANERIO_GRAPH_SUMMARY_NAMESPACE=${GLEANERIO_GRAPH_SUMMARY_NAMESPACE}
            - GLEANERIO_SUMMARIZE_GRAPH=${GLEANERIO_SUMMARIZE_GRAPH:-false}
            - ECRR_MINIO_BUCKET="ECRR"
            - ECRR_GRAPH_NAMESPACE="ECRR"


 #        command:
#            - "dagster-webserver"
#            - "-w"
#            - "workspace.yaml"
#            - "-h"
#            - "0.0.0.0"
#            - "-p"
#            - "3000"
        depends_on: &deps
            -   dagster-code-project
            - dagster-code-tasks

    dagster-daemon:
        environment: *env
# portainer issue, merging commandsmay need to create a combined customised on
#        command:
#        - "dagster-daemon"
#        - "run"
#        - "-w"
#        - "workspace.yaml"
        depends_on:
            - dagster-postgres
            - dagster-code-project
            - dagster-code-tasks
            - dagster-code-eco-ecrr
        networks:
            - traefik_proxy
## GRPC servers are not just serving the code
# they need to compile it, so same image for all dagster-*
    dagster-code-eco-ecrr:
        # you should be able to change the source locally, without a full rebuild.
       #image: dagster-${PROJECT:-eco}:latest
        image: docker.io/nsfearthcube/dagster-gleanerio-${PROJECT:-eco}:${CONTAINER_CODE_TAG:-latest}

        environment: *env
        command:
        - "dagster"
        - "api"
        - "grpc"
        - "-h"
        - "0.0.0.0"
        - "-p"
        - "4000"
        - "--python-file"
        - "/usr/src/app/workflows/ecrr/ecrr/repositories/repository.py"
        - "-d"
        - "/usr/src/app/workflows/ecrr/ecrr/"

        #volumes: *vol
        depends_on:
            - dagster-postgres
        networks:
            - dagster_host

